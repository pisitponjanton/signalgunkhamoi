import { prisma } from "@/lib/prisma";
import { sendEmail } from "@/lib/mail";
import { NextResponse } from "next/server";

export async function POST(req) {
  try {
    let { deviceCode } = await req.json();

    // ‚úÖ ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤-‡∏´‡∏•‡∏±‡∏á ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô lowercase ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ match ‡πÑ‡∏î‡πâ‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô
    deviceCode = deviceCode?.trim().toLowerCase();

    if (!deviceCode) {
      return NextResponse.json({ error: "Missing deviceCode" }, { status: 400 });
    }

    const noti = await prisma.noti.findUnique({
      where: { deviceCode },
      include: { user: true },
    });

    if (!noti) {
      return NextResponse.json({ error: "Device not found" }, { status: 404 });
    }

    await sendEmail(
      noti.user.email,
      "üö® ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏±‡∏ô‡∏Ç‡πÇ‡∏°‡∏¢",
      `‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå "${noti.deviceName}" ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß!\n‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ${
        noti.location || "-"
      }\n‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á: ${noti.deviceCode}`
    );

    return NextResponse.json({ message: "Alert sent successfully" });
  } catch (e) {
    return NextResponse.json({ error: e.message }, { status: 500 });
  }
}
